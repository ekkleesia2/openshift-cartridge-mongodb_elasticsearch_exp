#!/bin/bash

source $OPENSHIFT_CARTRIDGE_SDK_BASH
# Verbosidad a mil
# Download
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
client_result "--------------------------------->"
client_result "DIR"
client_result " ${DIR}"

cd ${OPENSHIFT_DATA_DIR}
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
client_result "--------------------------------->"
client_result "DIR"
client_result " ${DIR}"

curl -L -o tmp.tgz https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-3.0.4.tgz
#Env
tar -xvzf tmp.tgz
cp -rf mongodb-linux-x86_64-rhel62-3.0.4 mongodb
var_0=$(ls ${OPENSHIFT_DATA_DIR})
client_result "---------------->"
client_result "ls"
client_result "${var_0}"
# Create bin directory if necessary
#mkdir -p ${OPENSHIFT_DATA_DIR}.mongodb/bin

# Copy just the mongod binary
#tar -xvzf ${OPENSHIFT_DATA_DIR}tmp.tgz --strip-components=1 -C ${OPENSHIFT_DATA_DIR}.mongodb mongodb-linux-x86_64-${2}/bin/mongod

# Remove downloaded archive
rm ${OPENSHIFT_DATA_DIR}tmp.tgz

# Create data directory if necessary
mkdir -p ${OPENSHIFT_DATA_DIR}mongodb/data

# Add MONGODB_URL environment variable
if [ -z "$OPENSHIFT_MONGODB_PROXY_PORT" ]; then
  # Since $OPENSHIFT_MONGODB_PROXY_PORT is missing, cartridge must be running in the main gear
  echo "mongodb://$OPENSHIFT_MONGODB_IP:$OPENSHIFT_MONGODB_PORT/" > $OPENSHIFT_MONGODB_DIR/env/MONGODB_URL
else
  # Found $OPENSHIFT_MONGODB_PROXY_PORT, the cartridge is running in a separate gear
  echo "mongodb://$OPENSHIFT_GEAR_DNS:$OPENSHIFT_MONGODB_PROXY_PORT/" > $OPENSHIFT_MONGODB_DIR/env/MONGODB_URL
fi

# Output result
client_result "MongoDB ${2} installed - use \$MONGODB_URL environment variable to connect your application."
